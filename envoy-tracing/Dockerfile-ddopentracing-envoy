# Build and run envoyproxy/envoy, traced by Datadog
# This build context should match the one envoy uses to avoid shared library version problems (eg:
FROM ubuntu:16.04 as build

RUN apt-get update && apt-get install -y git build-essential libpcre3-dev zlib1g-dev libcurl4-openssl-dev wget curl tar cmake

# Install opentracing dependency
RUN wget -O opentracing-cpp.tar.gz https://github.com/opentracing/opentracing-cpp/archive/v1.3.0.tar.gz
RUN tar zxvf opentracing-cpp.tar.gz
RUN mkdir opentracing-cpp-1.3.0/.build
WORKDIR opentracing-cpp-1.3.0/.build
RUN cmake ..
RUN make
RUN make install
WORKDIR ../..

# Install msgpack dependency
RUN wget https://github.com/msgpack/msgpack-c/releases/download/cpp-2.1.5/msgpack-2.1.5.tar.gz
RUN tar zxvf msgpack-2.1.5.tar.gz
RUN mkdir msgpack-2.1.5/.build
WORKDIR msgpack-2.1.5/.build
RUN cmake ..
RUN make
RUN make install
WORKDIR ../..

# Compile dd-opentracing-cpp
ADD ./ ./dd-opentracing-cpp/
RUN rm -rf dd-opentracing-cpp/.build 
RUN mkdir dd-opentracing-cpp/.build
WORKDIR dd-opentracing-cpp/.build
RUN cmake -D BUILD_TESTING:BOOL=OFF ..
RUN make
RUN make install
WORKDIR ../..

# Final container
FROM envoyproxy/envoy:latest

RUN apt-get update && apt-get install -y libcurl4-openssl-dev

COPY --from=build /usr/local/lib/libopentracing.so.1.3.0 /usr/local/lib/libdd_opentracing.so /usr/local/lib/
RUN ldconfig

CMD /usr/local/bin/envoy -c /etc/front-envoy.yaml --service-cluster front-proxy
